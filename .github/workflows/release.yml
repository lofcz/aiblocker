name: Create Release

on:
  workflow_dispatch:
    inputs:
      version_bump:
        description: 'Select the version bump type (major, minor, or patch)'
        required: true
        type: choice
        default: 'patch'
        options:
          - patch
          - minor
          - major

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Bump version
        id: bump_version
        run: |
          # Use npm version to bump the version in package.json and package-lock.json
          # --no-git-tag-version prevents npm from creating a git tag itself
          npm version ${{ github.event.inputs.version_bump }} --no-git-tag-version
          
          # Extract the new version number and set it as an output
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Build and package extensions
        run: npm run ship

      - name: Commit and push version bump
        run: |
          git add package.json package-lock.json
          git commit -m "chore: release v${{ steps.bump_version.outputs.new_version }}"
          git push

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v${{ steps.bump_version.outputs.new_version }}"
          name: "Release v${{ steps.bump_version.outputs.new_version }}"
          body: "Release of version ${{ steps.bump_version.outputs.new_version }}."
          files: |
            dist/chrome.zip
            dist/firefox.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}